[{"C:\\Users\\anikc\\OneDrive\\Desktop\\yozex\\demoapni\\src\\index.js":"1","C:\\Users\\anikc\\OneDrive\\Desktop\\yozex\\demoapni\\src\\reportWebVitals.js":"2","C:\\Users\\anikc\\OneDrive\\Desktop\\yozex\\demoapni\\src\\App.js":"3","C:\\Users\\anikc\\OneDrive\\Desktop\\yozex\\demoapni\\src\\Landingscreen.js":"4","C:\\Users\\anikc\\OneDrive\\Desktop\\yozex\\demoapni\\src\\register.js":"5","C:\\Users\\anikc\\OneDrive\\Desktop\\yozex\\demoapni\\src\\Navbar.js":"6","C:\\Users\\anikc\\OneDrive\\Desktop\\yozex\\demoapni\\src\\UserList.js":"7"},{"size":322,"mtime":1692432760607,"results":"8","hashOfConfig":"9"},{"size":362,"mtime":1692425380675,"results":"10","hashOfConfig":"9"},{"size":596,"mtime":1699985915645,"results":"11","hashOfConfig":"9"},{"size":542,"mtime":1692426391927,"results":"12","hashOfConfig":"9"},{"size":6730,"mtime":1700133277078,"results":"13","hashOfConfig":"9"},{"size":1182,"mtime":1699986076454,"results":"14","hashOfConfig":"9"},{"size":1497,"mtime":1694060995845,"results":"15","hashOfConfig":"9"},{"filePath":"16","messages":"17","suppressedMessages":"18","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"19"},"1ar6opo",{"filePath":"20","messages":"21","suppressedMessages":"22","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"23"},{"filePath":"24","messages":"25","suppressedMessages":"26","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"27","messages":"28","suppressedMessages":"29","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"23"},{"filePath":"30","messages":"31","suppressedMessages":"32","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"33","messages":"34","suppressedMessages":"35","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"36","messages":"37","suppressedMessages":"38","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"39"},"C:\\Users\\anikc\\OneDrive\\Desktop\\yozex\\demoapni\\src\\index.js",[],[],[],"C:\\Users\\anikc\\OneDrive\\Desktop\\yozex\\demoapni\\src\\reportWebVitals.js",[],[],[],"C:\\Users\\anikc\\OneDrive\\Desktop\\yozex\\demoapni\\src\\App.js",["40"],[],"C:\\Users\\anikc\\OneDrive\\Desktop\\yozex\\demoapni\\src\\Landingscreen.js",[],[],"C:\\Users\\anikc\\OneDrive\\Desktop\\yozex\\demoapni\\src\\register.js",[],[],"C:\\Users\\anikc\\OneDrive\\Desktop\\yozex\\demoapni\\src\\Navbar.js",["41","42"],[],"C:\\Users\\anikc\\OneDrive\\Desktop\\yozex\\demoapni\\src\\UserList.js",["43"],[],"import React, { useState, useEffect } from 'react';\r\n\r\nconst UserList = () => {\r\n  const [users, setUsers] = useState([]);\r\n  const [searchKeyword, setSearchKeyword] = useState('');\r\n\r\n  useEffect(() => {\r\n    fetchUsers();\r\n  }, []);\r\n\r\n  const fetchUsers = async () => {\r\n    try {\r\n      const response = await fetch('http://localhost:5000/api/users');\r\n      const data = await response.json();\r\n      setUsers(data);\r\n    } catch (error) {\r\n      console.error('Error fetching users:', error);\r\n    }\r\n  };\r\n\r\n  const handleSearch = (e) => {\r\n    setSearchKeyword(e.target.value);\r\n  };\r\n\r\n  const filteredUsers = users.filter(user =>\r\n    user.name.toLowerCase().includes(searchKeyword.toLowerCase())\r\n  );\r\n\r\n  return (\r\n    <div>\r\n      <h2>User List</h2>\r\n      <input\r\n        type=\"text\"\r\n        placeholder=\"Search by name...\"\r\n        value={searchKeyword}\r\n        onChange={handleSearch}\r\n      />\r\n      <ul>\r\n        {filteredUsers.map(user => (\r\n          <li key={user._id}>\r\n            <strong>Name:</strong> {user.name}<br />\r\n            <strong>Address:</strong> {user.address}<br />\r\n            <strong>Email:</strong> {user.email}<br />\r\n            <strong>Mobile Number:</strong> {user.mobileNumber}<br />\r\n            {user.image && <img src={user.image} alt={`Image of ${user.name}`} style={{ maxWidth: '200px' }} />} {/* Display the user's image */}\r\n            <hr />\r\n          </li>\r\n        ))}\r\n      </ul>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default UserList;\r\n",{"ruleId":"44","severity":1,"message":"45","line":3,"column":40,"nodeType":"46","messageId":"47","endLine":3,"endColumn":44},{"ruleId":"48","severity":1,"message":"49","line":7,"column":17,"nodeType":"50","endLine":7,"endColumn":50},{"ruleId":"51","severity":1,"message":"52","line":7,"column":50,"nodeType":"50","endLine":8,"endColumn":34},{"ruleId":"53","severity":1,"message":"54","line":45,"column":28,"nodeType":"50","endLine":45,"endColumn":112},"no-unused-vars","'Link' is defined but never used.","Identifier","unusedVar","jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/jsx-eslint/eslint-plugin-jsx-a11y/blob/HEAD/docs/rules/anchor-is-valid.md","JSXOpeningElement","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","jsx-a11y/img-redundant-alt","Redundant alt attribute. Screen-readers already announce `img` tags as an image. You donâ€™t need to use the words `image`, `photo,` or `picture` (or any specified custom words) in the alt prop."]